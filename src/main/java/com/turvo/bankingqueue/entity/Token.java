package com.turvo.bankingqueue.entity;
// Generated 21 Mar, 2019 3:04:51 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.joda.time.DateTime;

/**
 * Token generated by hbm2java
 */
@Entity
@Table(name = "token", catalog = "abc_bank")
//@Audited
public class Token implements java.io.Serializable,Comparable<Token> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer tokenId;
	private Branch branch;
	private Customer customer;
	private TokenType tokenType;
	private String comment;
	private String status;
	private String tokenPriority;
	private Set<TokenStatus> tokenStatuses = new HashSet<TokenStatus>(0);

	@Transient
	private DateTime counterAddedTime;
	
	public Token() {
	}

	public Token(Branch branch, TokenType tokenType) {
		this.branch = branch;
		this.tokenType = tokenType;
	}

	public Token(Branch branch, Customer customer, TokenType tokenType, String comment, String status,
			String tokenPriority, Set<TokenStatus> tokenStatuses) {
		this.branch = branch;
		this.customer = customer;
		this.tokenType = tokenType;
		this.comment = comment;
		this.status = status;
		this.tokenPriority = tokenPriority;
		this.tokenStatuses = tokenStatuses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "token_id", unique = true, nullable = false)
	public Integer getTokenId() {
		return this.tokenId;
	}

	public void setTokenId(Integer tokenId) {
		this.tokenId = tokenId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "branch_id", nullable = false)
	public Branch getBranch() {
		return this.branch;
	}

	public void setBranch(Branch branch) {
		this.branch = branch;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "token_type_id", nullable = false)
	public TokenType getTokenType() {
		return this.tokenType;
	}

	public void setTokenType(TokenType tokenType) {
		this.tokenType = tokenType;
	}

	@Column(name = "comment", length = 45)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "token_priority", length = 8)
	public String getTokenPriority() {
		return this.tokenPriority;
	}

	public void setTokenPriority(String tokenPriority) {
		this.tokenPriority = tokenPriority;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "token")
	public Set<TokenStatus> getTokenStatuses() {
		return this.tokenStatuses;
	}

	public void setTokenStatuses(Set<TokenStatus> tokenStatuses) {
		this.tokenStatuses = tokenStatuses;
	}
	
	
	public int compareTo(Token token) {
		if (this.counterAddedTime.isBefore(token.counterAddedTime)) {
			return -1;
		} else {
			return 1;
		}
	}

	public void setCounterAddedTime(DateTime counterAddedTime) {
		this.counterAddedTime = counterAddedTime;
	}
	
}
